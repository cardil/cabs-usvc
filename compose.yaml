services:
  drivers:
    build:
      context: drivers
      dockerfile: Containerfile
    ports:
      - "8081:8081"
    environment:
      - "APP_DB_URI=redis://redis/"
      - "APP_ENV=dev"
    depends_on:
      - redis
    networks:
      - backend
      - db
    develop:
      watch:
        - action: rebuild
          path: drivers/src
        - action: rebuild
          path: drivers/Cargo.toml
        - action: rebuild
          path: drivers/Cargo.lock


  legacy:
    build:
      context: legacy
      dockerfile: Containerfile
    ports:
      - "8080:8080"
    environment:
      - "USVC_DRIVERS=http://drivers:8081/drivers"
    depends_on:
      - drivers
    networks:
      - backend
    develop:
      watch:
        - action: rebuild
          path: legacy/src
        - action: rebuild
          path: legacy/pom.xml
  
  redis:
    image: docker.io/redis/redis-stack-server
    networks:
      - db
  
  redis-data:
    build:
      context: drivers/db
      dockerfile: Containerfile
    networks:
      - db
    depends_on:
      - redis
    environment:
      - "REDIS_DB=redis"
      - "HANG=yes"
    stop_signal: SIGINT
    restart: on-failure

networks:
  backend: {}
  db: {}
